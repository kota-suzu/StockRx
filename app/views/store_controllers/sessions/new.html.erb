<%# ============================================ %>
<%# StockRx Store Login - Bootstrap 5 UI Version %>
<%# ============================================ %>
<%# CLAUDE.md準拠: Bootstrap環境での正しい実装 %>
<%# メタ認知: プロジェクトのCSSフレームワークに合わせた実装 %>
<%# 横展開: 他の認証画面もBootstrap統一 %>
<%# ============================================ %>

<% content_for :title, "ログイン" %>

<style>
  /* 共通スタイル定義（Bootstrap 5ベース） */
  :root {
    --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    --success-color: #10b981;
    --error-color: #ef4444;
    --focus-ring: rgba(102, 126, 234, 0.4);
  }
  
  /* カスタムスタイル（Bootstrap拡張） */
  .gradient-bg {
    background: var(--primary-gradient);
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 1rem;
  }
  
  .card-custom {
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
    border: none;
    border-radius: 1rem;
    overflow: hidden;
    max-width: 600px;
    width: 100%;
    margin: 0 auto;
  }
  
  /* タブナビゲーション */
  .nav-tabs-custom {
    border-bottom: 2px solid #e5e7eb;
    background-color: #f8f9fa;
  }
  
  .nav-tabs-custom .nav-link {
    border: none;
    border-bottom: 3px solid transparent;
    color: #6b7280;
    font-weight: 500;
    padding: 1rem 1.5rem;
    margin-bottom: -2px;
    transition: all 0.2s ease;
    min-height: 60px;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: transparent;
  }
  
  .nav-tabs-custom .nav-link:hover {
    color: #4b5563;
    border-color: transparent;
    background-color: rgba(124, 58, 237, 0.05);
    border-bottom-color: rgba(124, 58, 237, 0.3);
  }
  
  .nav-tabs-custom .nav-link.active {
    color: #7c3aed;
    background-color: #ffffff;
    border-color: transparent;
    border-bottom-color: #7c3aed;
    font-weight: 600;
  }
  
  /* ボタンスタイル */
  .btn-gradient {
    background: linear-gradient(to right, #7c3aed, #ec4899);
    color: white;
    font-weight: 600;
    border: none;
    transition: all 0.2s ease;
  }
  
  .btn-gradient:hover {
    color: white;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(124, 58, 237, 0.3);
  }
  
  .btn-gradient:disabled {
    opacity: 0.7;
    transform: none;
  }
  
  .btn-success-gradient {
    background: linear-gradient(to right, #10b981, #059669);
    color: white;
    font-weight: 600;
    border: none;
    transition: all 0.2s ease;
  }
  
  .btn-success-gradient:hover {
    color: white;
    background: linear-gradient(to right, #059669, #047857);
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(16, 185, 129, 0.3);
  }
  
  /* パスコード入力フィールド */
  .passcode-input {
    font-size: 2rem;
    letter-spacing: 1rem;
    text-align: center;
    font-family: 'SF Mono', Monaco, 'Cascadia Code', monospace;
  }
  
  /* アニメーション */
  @keyframes slideUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .animate-slide-up {
    animation: slideUp 0.5s ease-out;
  }
  
  /* 背景オーバーライド */
  body {
    margin: 0;
    padding: 0;
    background: transparent !important;
  }
  
  /* レスポンシブ調整 */
  @media (max-width: 576px) {
    .gradient-bg {
      padding: 0.5rem;
    }
    
    .card-custom {
      margin: 0;
      max-width: 100%;
    }
    
    .nav-tabs-custom .nav-link {
      padding: 0.75rem 0.5rem;
      font-size: 0.875rem;
      min-height: 50px;
    }
    
    .nav-tabs-custom .nav-link i {
      display: none;
    }
  }
</style>

<div class="gradient-bg">
  <div class="container">
    <div class="row justify-content-center">
      <div class="col-12 col-sm-10 col-md-8 col-lg-7 col-xl-6 col-xxl-5 animate-slide-up">
        <!-- ロゴとタイトル -->
        <div class="text-center mb-4">
          <div class="d-inline-flex align-items-center justify-content-center bg-white rounded-circle shadow mb-3" style="width: 80px; height: 80px;">
            <i class="bi bi-shield-lock fs-1 text-primary"></i>
          </div>
          <h1 class="h2 fw-bold text-white mb-2">StockRx</h1>
          <p class="text-white-50 mb-0"><%= @store ? @store.name : "店舗ログイン" %></p>
        </div>

        <% if @store %>
          <!-- メインカード -->
          <div class="card card-custom">
            <!-- タブナビゲーション -->
            <ul class="nav nav-tabs nav-tabs-custom" id="loginTabs" role="tablist">
              <li class="nav-item flex-fill" role="presentation">
                <button class="nav-link active w-100" id="password-tab" data-bs-toggle="tab" data-bs-target="#password-login" type="button" role="tab" aria-controls="password-login" aria-selected="true">
                  <i class="bi bi-key-fill me-2"></i>
                  パスワードログイン
                </button>
              </li>
              <li class="nav-item flex-fill" role="presentation">
                <button class="nav-link w-100" id="passcode-tab" data-bs-toggle="tab" data-bs-target="#passcode-login" type="button" role="tab" aria-controls="passcode-login" aria-selected="false">
                  <i class="bi bi-phone me-2"></i>
                  パスコードログイン
                </button>
              </li>
            </ul>
            
            <div class="card-body p-4 p-md-5">
              <div class="tab-content" id="loginTabContent">
                <!-- パスワードログイン（デフォルト表示） -->
                <div class="tab-pane fade show active" id="password-login" role="tabpanel" aria-labelledby="password-tab">
                  <div class="text-center mb-4">
                    <div class="d-inline-flex align-items-center justify-content-center bg-primary bg-opacity-10 rounded-circle mb-3" style="width: 64px; height: 64px;">
                      <i class="bi bi-key-fill fs-3 text-primary"></i>
                    </div>
                    <h2 class="h4 fw-semibold mb-2">パスワードログイン</h2>
                    <p class="text-muted">メールアドレスとパスワードでログイン</p>
                  </div>
                  
                  <%= form_with scope: :store_user, 
                                url: store_user_session_path(store_slug: @store.slug),
                                local: true,
                                class: "needs-validation",
                                html: { novalidate: true } do |f| %>
                    
                    <!-- メールアドレス -->
                    <div class="mb-3">
                      <label class="form-label fw-medium">
                        <i class="bi bi-envelope me-1"></i>
                        メールアドレス
                      </label>
                      <%= f.email_field :email,
                                        autofocus: true,
                                        autocomplete: "email",
                                        class: "form-control",
                                        placeholder: "email@example.com",
                                        required: true %>
                      <div class="invalid-feedback">
                        メールアドレスを入力してください
                      </div>
                    </div>
                    
                    <!-- パスワード -->
                    <div class="mb-3">
                      <label class="form-label fw-medium">
                        <i class="bi bi-lock me-1"></i>
                        パスワード
                      </label>
                      <%= f.password_field :password,
                                           autocomplete: "current-password",
                                           class: "form-control",
                                           placeholder: "••••••••",
                                           required: true %>
                      <div class="invalid-feedback">
                        パスワードを入力してください
                      </div>
                    </div>
                    
                    <!-- ログイン状態を保持 -->
                    <div class="form-check mb-4">
                      <%= f.check_box :remember_me, class: "form-check-input" %>
                      <label class="form-check-label small" for="store_user_remember_me">
                        ログイン状態を保持する
                      </label>
                    </div>
                    
                    <!-- ログインボタン -->
                    <div class="d-grid mb-3">
                      <%= f.submit "ログイン",
                                   class: "btn btn-gradient btn-lg py-3",
                                   data: { disable_with: "ログイン中..." } %>
                    </div>
                  <% end %>
                  
                  <!-- ヘルプリンク -->
                  <div class="text-center mt-4">
                    <p class="mb-2">
                      <%= link_to "パスワードを忘れた方はこちら", 
                                  store_email_auth_path(store_slug: @store.slug),
                                  class: "text-decoration-none fw-medium" %>
                    </p>
                    <div class="alert alert-info border-0 mt-3">
                      <small class="text-info-emphasis">
                        <i class="bi bi-info-circle me-1"></i>
                        初回ログインの方は、管理者から配布されたパスワードをご利用ください
                      </small>
                    </div>
                  </div>
                </div>
                
                <!-- パスコードログイン -->
                <div class="tab-pane fade" id="passcode-login" role="tabpanel" aria-labelledby="passcode-tab">
                  <!-- Step 1: メールアドレス入力 -->
                  <div id="passcode-step1">
                    <div class="text-center mb-4">
                      <div class="d-inline-flex align-items-center justify-content-center bg-success bg-opacity-10 rounded-circle mb-3" style="width: 64px; height: 64px;">
                        <i class="bi bi-envelope-check fs-3 text-success"></i>
                      </div>
                      <h2 class="h4 fw-semibold mb-2">パスコードログイン</h2>
                      <p class="text-muted">メールアドレスを入力してパスコードを受け取る</p>
                    </div>
                    
                    <%= form_with url: store_request_temp_password_path(store_slug: @store.slug),
                                  local: false,
                                  id: "passcode-request-form",
                                  class: "needs-validation",
                                  html: { novalidate: true } do |f| %>
                      <div class="mb-3">
                        <label class="form-label fw-medium">
                          <i class="bi bi-envelope me-1"></i>
                          メールアドレス
                        </label>
                        <%= f.email_field :email,
                                          class: "form-control",
                                          placeholder: "email@example.com",
                                          required: true %>
                        <div class="invalid-feedback">
                          メールアドレスを入力してください
                        </div>
                      </div>
                      
                      <%= f.hidden_field :store_id, value: @store.id %>
                      <%= f.hidden_field :store_slug, value: @store.slug %>
                      
                      <div class="d-grid mb-3">
                        <%= f.submit "パスコードを送信",
                                     class: "btn btn-success-gradient btn-lg py-3",
                                     data: { disable_with: "送信中..." } %>
                      </div>
                    <% end %>
                    
                    <div class="alert alert-warning border-0">
                      <small class="text-warning-emphasis">
                        <i class="bi bi-info-circle me-1"></i>
                        パスコードは15分間有効です。受信したら速やかに入力してください。
                      </small>
                    </div>
                  </div>
                  
                  <!-- Step 2: パスコード入力（JavaScript で表示切り替え） -->
                  <div id="passcode-step2" style="display: none;">
                    <div class="text-center mb-4">
                      <div class="d-inline-flex align-items-center justify-content-center bg-warning bg-opacity-10 rounded-circle mb-3" style="width: 64px; height: 64px;">
                        <i class="bi bi-shield-lock fs-3 text-warning"></i>
                      </div>
                      <h2 class="h4 fw-semibold mb-2">パスコードを入力</h2>
                      <p class="text-muted">メールで受信した6桁のパスコードを入力してください</p>
                    </div>
                    
                    <%= form_with url: store_verify_temp_password_path(store_slug: @store.slug),
                                  local: true,
                                  id: "passcode-verify-form",
                                  class: "needs-validation",
                                  html: { novalidate: true } do |f| %>
                      <div class="mb-3">
                        <label class="form-label fw-medium">
                          <i class="bi bi-shield-lock me-1"></i>
                          6桁のパスコード
                        </label>
                        <%= f.text_field :temp_password,
                                         class: "form-control passcode-input",
                                         placeholder: "••••••",
                                         maxlength: 6,
                                         pattern: "[0-9]{6}",
                                         inputmode: "numeric",
                                         autocomplete: "one-time-code",
                                         required: true %>
                        <div class="invalid-feedback">
                          6桁のパスコードを入力してください
                        </div>
                      </div>
                      
                      <%= f.hidden_field :email, id: "passcode_verify_email" %>
                      <%= f.hidden_field :store_id, value: @store.id %>
                      <%= f.hidden_field :store_slug, value: @store.slug %>
                      
                      <div class="d-grid mb-3">
                        <%= f.submit "ログイン",
                                     class: "btn btn-success-gradient btn-lg py-3",
                                     data: { disable_with: "ログイン中..." } %>
                      </div>
                    <% end %>
                    
                    <div class="d-flex justify-content-between small">
                      <button type="button" class="btn btn-link text-decoration-none p-0" onclick="resetPasscodeForm()">
                        <i class="bi bi-arrow-left me-1"></i>
                        メールアドレス変更
                      </button>
                      <span class="text-muted">
                        <i class="bi bi-clock me-1"></i>
                        15分有効
                      </span>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            
            <!-- フッター -->
            <div class="card-footer bg-light text-center border-0">
              <small class="text-muted">
                <%= link_to store_selection_path, class: "text-decoration-none fw-medium" do %>
                  <i class="bi bi-shop me-1"></i>
                  別の店舗を選択
                <% end %>
              </small>
            </div>
          </div>

          <!-- セキュリティ情報 -->
          <div class="text-center mt-4">
            <div class="d-inline-flex align-items-center text-white-50 small">
              <i class="bi bi-shield-check me-2"></i>
              <span>安全な接続で保護されています</span>
            </div>
          </div>

        <% else %>
          <!-- 店舗が選択されていない場合 -->
          <div class="card card-custom">
            <div class="card-body p-5 text-center">
              <div class="mb-4">
                <i class="bi bi-exclamation-triangle-fill text-warning fs-1"></i>
              </div>
              <h2 class="h4 fw-semibold mb-3">店舗が選択されていません</h2>
              <p class="text-muted mb-4">ログインするには、まず店舗を選択してください。</p>
              <%= link_to "店舗を選択する",
                          store_selection_path,
                          class: "btn btn-gradient btn-lg py-3" %>
            </div>
          </div>
        <% end %>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  console.log('🔐 Login page JavaScript initialized');
  
  // 🔧 Bootstrap Tab初期化の追加（パスコードログイン修正）
  // CLAUDE.md準拠: 確実なBootstrap初期化でタブ機能保証
  initializeBootstrapTabs();
  
  // パスコードリクエストフォームの処理
  const passcodeRequestForm = document.getElementById('passcode-request-form');
  if (passcodeRequestForm) {
    passcodeRequestForm.addEventListener('submit', function(e) {
      e.preventDefault();
      
      const formData = new FormData(this);
      const email = formData.get('email');
      
      if (!email) {
        alert('メールアドレスを入力してください');
        return;
      }
      
      console.log('📧 Requesting passcode for:', email);
      
      // パスコード送信処理
      fetch(this.action, {
        method: 'POST',
        body: formData,
        headers: {
          'X-Requested-With': 'XMLHttpRequest',
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
        }
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          console.log('✅ Passcode sent successfully');
          // Step 2を表示
          document.getElementById('passcode-step1').style.display = 'none';
          document.getElementById('passcode-step2').style.display = 'block';
          document.getElementById('passcode_verify_email').value = email;
          
          // パスコード入力フィールドにフォーカス
          const passcodeField = document.querySelector('#passcode-verify-form input[name="temp_password_verification[temp_password]"]');
          if (passcodeField) {
            passcodeField.focus();
          }
        } else {
          alert(data.message || 'パスコードの送信に失敗しました');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('ネットワークエラーが発生しました');
      });
    });
  }

  // パスコード入力フィールドの処理
  const passcodeField = document.querySelector('input[name="temp_password_verification[temp_password]"]');
  if (passcodeField) {
    // 入力値の自動フォーマット
    passcodeField.addEventListener('input', function(e) {
      // 数字以外を削除
      this.value = this.value.replace(/[^0-9]/g, '');
      
      // 6桁入力完了時の視覚フィードバック
      if (this.value.length === 6) {
        this.classList.add('border-success');
        this.classList.remove('border-secondary');
        console.log('✅ 6-digit passcode entered');
      } else {
        this.classList.remove('border-success');
        this.classList.add('border-secondary');
      }
    });

    // ペースト時の処理
    passcodeField.addEventListener('paste', function(e) {
      e.preventDefault();
      const pastedText = (e.clipboardData || window.clipboardData).getData('text');
      const numbers = pastedText.replace(/[^0-9]/g, '').slice(0, 6);
      this.value = numbers;
      
      // inputイベントをトリガー
      const event = new Event('input', { bubbles: true });
      this.dispatchEvent(event);
      
      console.log('📋 Passcode pasted and formatted');
    });
    
    // フォーカス時に全選択
    passcodeField.addEventListener('focus', function() {
      this.select();
    });
  }
  
  // フォームバリデーション（Bootstrap標準）
  const forms = document.querySelectorAll('.needs-validation');
  Array.from(forms).forEach(function(form) {
    form.addEventListener('submit', function(event) {
      if (!form.checkValidity()) {
        event.preventDefault();
        event.stopPropagation();
      }
      form.classList.add('was-validated');
    });
  });
  
  console.log('🎯 Login page setup completed');
});

// パスコードフォームをリセットする関数
function resetPasscodeForm() {
  console.log('🔄 Resetting passcode form');
  document.getElementById('passcode-step2').style.display = 'none';
  document.getElementById('passcode-step1').style.display = 'block';
  
  const form = document.getElementById('passcode-request-form');
  if (form) {
    form.reset();
    const emailField = form.querySelector('input[type="email"]');
    if (emailField) {
      emailField.focus();
    }
  }
}

// Bootstrap Tab初期化関数（パスコードログイン修正）
// CLAUDE.md準拠: 確実なタブ機能保証とフォールバック実装
function initializeBootstrapTabs() {
  console.log('🔧 Initializing Bootstrap tabs for login page...');
  
  const tabElements = document.querySelectorAll('[data-bs-toggle="tab"]');
  
  if (tabElements.length === 0) {
    console.log('ℹ️ No tab elements found on login page');
    return;
  }
  
  tabElements.forEach((element, index) => {
    try {
      // Bootstrap Tab初期化
      if (typeof bootstrap !== 'undefined' && bootstrap.Tab) {
        // 既存インスタンス重複防止
        const existingInstance = bootstrap.Tab.getInstance(element);
        if (existingInstance) {
          existingInstance.dispose();
        }
        
        // 新しいTabインスタンス作成
        const tab = new bootstrap.Tab(element);
        console.log(`✅ Bootstrap Tab ${index + 1} initialized: ${element.id || 'unnamed'}`);
        
        // パスコードタブ特定ログ
        if (element.id === 'passcode-tab') {
          console.log('🎯 Passcode tab (Bootstrap) initialized successfully');
        }
        
      } else {
        // フォールバック: 手動タブ機能
        console.log(`🔧 Bootstrap unavailable, setting up manual tab for: ${element.id || 'unnamed'}`);
        setupManualTab(element);
      }
      
    } catch (error) {
      console.error(`❌ Tab ${index + 1} initialization failed:`, error);
      // エラー時フォールバック
      setupManualTab(element);
    }
  });
  
  console.log('🎯 Login page tab initialization completed');
}

// 手動タブ機能（フォールバック）
// CLAUDE.md準拠: 確実なタブ切り替え機能保証
function setupManualTab(tabElement) {
  console.log('🔧 Setting up manual tab for:', tabElement.id || 'unnamed');
  
  tabElement.addEventListener('click', function(e) {
    e.preventDefault();
    handleManualTabToggle(this);
  });
  
  // キーボードアクセシビリティ
  tabElement.addEventListener('keydown', function(e) {
    if (e.key === 'Enter' || e.key === ' ') {
      e.preventDefault();
      handleManualTabToggle(this);
    }
  });
  
  // パスコードタブ特定ログ
  if (tabElement.id === 'passcode-tab') {
    console.log('🎯 Passcode tab (manual) initialized successfully');
  }
}

// 手動タブ切り替え処理
function handleManualTabToggle(tabElement) {
  const targetSelector = tabElement.getAttribute('data-bs-target') || tabElement.getAttribute('href');
  const targetPane = document.querySelector(targetSelector);
  
  if (!targetPane) {
    console.error('Tab target not found:', targetSelector);
    return;
  }
  
  // 同一グループの全タブを非アクティブ化
  const tabContainer = tabElement.closest('.nav-tabs');
  if (tabContainer) {
    tabContainer.querySelectorAll('.nav-link').forEach(tab => {
      tab.classList.remove('active');
      tab.setAttribute('aria-selected', 'false');
    });
    
    // 対応するタブパネルも非アクティブ化
    const allPanes = document.querySelectorAll('.tab-pane');
    allPanes.forEach(pane => {
      pane.classList.remove('show', 'active');
    });
  }
  
  // 選択されたタブをアクティブ化
  tabElement.classList.add('active');
  tabElement.setAttribute('aria-selected', 'true');
  
  // 対応するタブパネルをアクティブ化
  targetPane.classList.add('show', 'active');
  
  console.log(`👆 Manual tab activated: ${tabElement.id || 'unnamed'} -> ${targetSelector}`);
  
  // パスコードタブアクティベーション特定ログ
  if (tabElement.id === 'passcode-tab') {
    console.log('🎯 Passcode tab activated successfully');
    
    // パスコード入力フィールドにフォーカス（UX向上）
    setTimeout(() => {
      const emailField = targetPane.querySelector('input[type="email"]');
      if (emailField) {
        emailField.focus();
        console.log('📧 Passcode email field focused');
      }
    }, 100);
  }
}

// ページ表示時の初期フォーカス設定
document.addEventListener('turbo:load', function() {
  // Turbo互換性: 再初期化
  initializeBootstrapTabs();
  
  // パスワードログインタブがアクティブな場合、メールフィールドにフォーカス
  const passwordTab = document.getElementById('password-tab');
  const passwordLoginPane = document.getElementById('password-login');
  
  if (passwordTab && passwordTab.classList.contains('active')) {
    setTimeout(() => {
      const emailField = passwordLoginPane.querySelector('input[type="email"]');
      if (emailField) {
        emailField.focus();
      }
    }, 100);
  }
});
</script>

<%# ============================================ %>
<%# TODO: Phase 5-6 の実装項目 %>
<%# ============================================ %>
<%# 
  TODO: 🟡 Phase 5（重要）- パスワード強度インジケーター
  優先度: 中（セキュリティ向上）
  実装内容:
    - リアルタイムパスワード強度チェック
    - Bootstrap Progress Barでの視覚的表示
    - パスワード要件のガイダンス
  期待効果: セキュアなパスワード設定の促進
  
  TODO: 🟢 Phase 6（推奨）- 生体認証対応
  優先度: 低（先進的機能）
  実装内容:
    - WebAuthn API実装
    - Touch ID/Face ID対応
  期待効果: パスワードレス認証の実現
%>