<%# ============================================ %>
<%# StockRx Store Login - Bootstrap UI Version %>
<%# ============================================ %>
<%# CLAUDE.md準拠: Bootstrap環境での正しい実装 %>
<%# メタ認知: プロジェクトのCSSフレームワークに合わせた実装 %>
<%# 横展開: 他の認証画面もBootstrap統一 %>
<%# ============================================ %>

<% content_for :title, "ログイン" %>

<style>
  /* 共通スタイル定義 */
  :root {
    --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    --success-color: #10b981;
    --error-color: #ef4444;
    --focus-ring: rgba(102, 126, 234, 0.4);
  }
  
  /* カスタムスタイル（Bootstrap拡張） */
  .gradient-bg {
    background: var(--primary-gradient);
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 1rem;
  }
  
  .card-custom {
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
    border: none;
    border-radius: 1rem;
    overflow: hidden;
    max-width: 500px;
    width: 100%;
    margin: 0 auto;
  }
  
  /* タブナビゲーション */
  .nav-tabs-custom {
    border-bottom: 2px solid #e5e7eb;
  }
  
  .nav-tabs-custom .nav-link {
    border: none;
    border-bottom: 2px solid transparent;
    color: #6b7280;
    font-weight: 500;
    padding: 1rem 1rem;
    margin-bottom: -2px;
    transition: all 0.2s ease;
    min-height: 60px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .nav-tabs-custom .nav-link:hover {
    color: #4b5563;
    border-color: transparent;
    background-color: rgba(124, 58, 237, 0.05);
  }
  
  .nav-tabs-custom .nav-link.active {
    color: #7c3aed;
    background-color: transparent;
    border-color: transparent;
    border-bottom-color: #7c3aed;
  }
  
  /* ボタンスタイル */
  .btn-gradient {
    background: linear-gradient(to right, #7c3aed, #ec4899);
    color: white;
    font-weight: 600;
    border: none;
    transition: all 0.2s ease;
  }
  
  .btn-gradient:hover {
    color: white;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(124, 58, 237, 0.3);
  }
  
  .btn-gradient:disabled {
    opacity: 0.7;
    transform: none;
  }
  
  /* パスコード入力フィールド */
  .passcode-input {
    font-size: 2rem;
    letter-spacing: 1rem;
    text-align: center;
    font-family: 'SF Mono', Monaco, 'Cascadia Code', monospace;
  }
  
  /* アニメーション */
  @keyframes slideUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .animate-slide-up {
    animation: slideUp 0.5s ease-out;
  }
  
  /* 背景オーバーライド */
  body {
    margin: 0;
    padding: 0;
    background: transparent !important;
  }
  
  /* レスポンシブ調整 */
  @media (max-width: 576px) {
    .gradient-bg {
      padding: 0.5rem;
    }
    
    .card-custom {
      margin: 0;
    }
    
    .nav-tabs-custom .nav-link {
      padding: 0.75rem 0.5rem;
      font-size: 0.875rem;
      min-height: 50px;
    }
    
    .nav-tabs-custom .nav-link i {
      display: none;
    }
  }
  
  @media (min-width: 992px) {
    .card-custom {
      max-width: 480px;
    }
  }
  
  @media (min-width: 1200px) {
    .card-custom {
      max-width: 500px;
    }
  }
</style>

<div class="gradient-bg">
  <div class="container">
    <div class="row justify-content-center">
      <div class="col-12 col-sm-10 col-md-8 col-lg-6 col-xl-5 animate-slide-up">
        <!-- ロゴとタイトル -->
        <div class="text-center mb-4">
          <div class="d-inline-flex align-items-center justify-content-center bg-white rounded-circle shadow mb-3" style="width: 80px; height: 80px;">
            <i class="bi bi-shield-lock fs-1 text-primary"></i>
          </div>
          <h1 class="h2 fw-bold text-white mb-2">StockRx</h1>
          <p class="text-white-50 mb-0"><%= @store ? @store.name : "店舗ログイン" %></p>
        </div>

        <% if @store %>
          <!-- メインカード -->
          <div class="card card-custom">
            <!-- タブナビゲーション -->
            <ul class="nav nav-tabs nav-tabs-custom" id="loginTabs" role="tablist">
              <li class="nav-item flex-fill" role="presentation">
                <button class="nav-link active w-100" id="password-tab" data-bs-toggle="tab" data-bs-target="#password-login" type="button" role="tab" aria-controls="password-login" aria-selected="true">
                  <i class="bi bi-key-fill me-2"></i>
                  パスワードログイン
                </button>
              </li>
              <li class="nav-item flex-fill" role="presentation">
                <button class="nav-link w-100" id="passcode-tab" data-bs-toggle="tab" data-bs-target="#passcode-login" type="button" role="tab" aria-controls="passcode-login" aria-selected="false">
                  <i class="bi bi-phone me-2"></i>
                  パスコードログイン
                </button>
              </li>
            </ul>
            
            <div class="card-body p-4 p-md-5">
              <div class="tab-content" id="loginTabContent">
                <!-- パスワードログイン（デフォルト表示） -->
                <div class="tab-pane fade show active" id="password-login" role="tabpanel" aria-labelledby="password-tab">
                  <div class="text-center mb-4">
                    <h2 class="h4 fw-semibold mb-2">パスワードログイン</h2>
                    <p class="text-muted">メールアドレスとパスワードでログイン</p>
                  </div>
                  
                  <%= form_with scope: :store_user, 
                                url: store_user_session_path(store_slug: @store.slug),
                                local: true,
                                class: "needs-validation",
                                html: { novalidate: true } do |f| %>
                    
                    <!-- メールアドレス -->
                    <div class="mb-3">
                      <label class="form-label small fw-medium">
                        <i class="bi bi-envelope me-1"></i>
                        メールアドレス
                      </label>
                      <%= f.email_field :email,
                                        autofocus: true,
                                        autocomplete: "email",
                                        class: "form-control",
                                        placeholder: "email@example.com",
                                        required: true %>
                      <div class="invalid-feedback">
                        メールアドレスを入力してください
                      </div>
                    </div>
                    
                    <!-- パスワード -->
                    <div class="mb-3">
                      <label class="form-label small fw-medium">
                        <i class="bi bi-lock me-1"></i>
                        パスワード
                      </label>
                      <%= f.password_field :password,
                                           autocomplete: "current-password",
                                           class: "form-control",
                                           placeholder: "••••••••",
                                           required: true %>
                      <div class="invalid-feedback">
                        パスワードを入力してください
                      </div>
                    </div>
                    
                    <!-- ログイン状態を保持 -->
                    <div class="form-check mb-3">
                      <%= f.check_box :remember_me, class: "form-check-input" %>
                      <label class="form-check-label small" for="store_user_remember_me">
                        ログイン状態を保持する
                      </label>
                    </div>
                    
                    <!-- ログインボタン -->
                    <div class="d-grid mb-3">
                      <%= f.submit "ログイン",
                                   class: "btn btn-gradient btn-lg",
                                   data: { disable_with: "ログイン中..." } %>
                    </div>
                  <% end %>
                  
                  <!-- ヘルプリンク -->
                  <div class="text-center mt-4">
                    <p class="mb-2">
                      <%= link_to "パスワードを忘れた方はこちら", 
                                  store_email_auth_path(store_slug: @store.slug),
                                  class: "small text-decoration-none" %>
                    </p>
                    <p class="text-muted" style="font-size: 0.75rem;">
                      <i class="bi bi-info-circle"></i>
                      初回ログインの方は、管理者から配布されたパスワードをご利用ください
                    </p>
                  </div>
                </div>
                
                <!-- パスコードログイン -->
                <div class="tab-pane fade" id="passcode-login" role="tabpanel" aria-labelledby="passcode-tab">
                  <!-- Step 1: メールアドレス入力 -->
                  <div id="passcode-step1">
                    <div class="text-center mb-4">
                      <h2 class="h4 fw-semibold mb-2">パスコードログイン</h2>
                      <p class="text-muted">メールアドレスを入力してパスコードを受け取る</p>
                    </div>
                    
                    <%= form_with url: store_request_temp_password_path(store_slug: @store.slug),
                                  local: false,
                                  id: "passcode-request-form",
                                  class: "needs-validation",
                                  html: { novalidate: true } do |f| %>
                      <div class="mb-3">
                        <label class="form-label small fw-medium">
                          <i class="bi bi-envelope me-1"></i>
                          メールアドレス
                        </label>
                        <%= f.email_field :email,
                                          autocomplete: "email",
                                          class: "form-control",
                                          placeholder: "email@example.com",
                                          required: true %>
                        <div class="invalid-feedback">
                          メールアドレスを入力してください
                        </div>
                      </div>
                      
                      <div class="d-grid mb-3">
                        <%= f.submit "パスコードを送信",
                                     id: "submit-passcode-request",
                                     class: "btn btn-gradient btn-lg" %>
                      </div>
                    <% end %>
                    
                    <div class="text-center mt-3">
                      <p class="text-muted small">
                        <i class="bi bi-shield-check me-1"></i>
                        6桁のパスコードがメールで送信されます
                      </p>
                    </div>
                  </div>
                  
                  <!-- Step 2: パスコード入力 -->
                  <div id="passcode-step2" class="d-none">
                    <div class="text-center mb-4">
                      <div class="d-inline-flex align-items-center justify-content-center bg-success bg-opacity-10 rounded-circle mb-3" style="width: 64px; height: 64px;">
                        <i class="bi bi-envelope-check fs-3 text-success"></i>
                      </div>
                      <h2 class="h4 fw-semibold mb-2">パスコードを入力</h2>
                      <p class="text-muted small" id="passcode-sent-message">
                        パスコードを送信しました
                      </p>
                    </div>
                    
                    <%= form_with url: store_verify_temp_password_path(store_slug: @store.slug),
                                  local: true,
                                  id: "passcode-verify-form",
                                  class: "needs-validation",
                                  html: { novalidate: true } do |f| %>
                      <%= f.hidden_field :email, id: "verify-email" %>
                      
                      <div class="mb-3">
                        <label class="form-label small fw-medium">
                          6桁のパスコード
                        </label>
                        <%= f.text_field :temp_password,
                                         autocomplete: "one-time-code",
                                         class: "form-control form-control-lg passcode-input",
                                         placeholder: "······",
                                         maxlength: 6,
                                         pattern: "[0-9]{6}",
                                         inputmode: "numeric",
                                         required: true %>
                        <div class="invalid-feedback">
                          6桁の数字を入力してください
                        </div>
                      </div>
                      
                      <div class="d-grid mb-3">
                        <%= f.submit "ログイン",
                                     id: "submit-passcode",
                                     class: "btn btn-gradient btn-lg" %>
                      </div>
                    <% end %>
                    
                    <div class="text-center mt-3">
                      <button id="resend-passcode" class="btn btn-link btn-sm text-decoration-none">
                        <i class="bi bi-arrow-repeat me-1"></i>
                        パスコードを再送信
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            
            <!-- フッター -->
            <div class="card-footer bg-light text-center py-3">
              <p class="mb-0 small">
                <%= link_to store_selection_path, class: "text-decoration-none" do %>
                  <i class="bi bi-arrow-left me-1"></i>
                  別の店舗でログイン
                <% end %>
              </p>
            </div>
          </div>
          
          <!-- セキュリティ情報 -->
          <div class="text-center mt-4">
            <div class="d-inline-flex align-items-center text-white-50" style="font-size: 0.875rem;">
              <i class="bi bi-shield-check me-2"></i>
              <span>安全な接続で保護されています</span>
            </div>
          </div>
          
        <% else %>
          <!-- 店舗未選択 -->
          <div class="card card-custom">
            <div class="card-body p-4 text-center">
              <div class="d-inline-flex align-items-center justify-content-center bg-warning bg-opacity-10 rounded-circle mb-3" style="width: 64px; height: 64px;">
                <i class="bi bi-exclamation-triangle fs-3 text-warning"></i>
              </div>
              <h2 class="h5 fw-semibold mb-2">店舗が選択されていません</h2>
              <p class="text-muted mb-4">ログインする店舗を選択してください</p>
              <%= link_to store_selection_path,
                          class: "btn btn-primary" do %>
                <i class="bi bi-shop me-2"></i>
                店舗を選択
              <% end %>
            </div>
          </div>
        <% end %>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('turbo:load', function() {
  console.log('🎨 Bootstrap login UI loaded');
  
  // フォームバリデーション
  const forms = document.querySelectorAll('.needs-validation');
  forms.forEach(form => {
    form.addEventListener('submit', function(event) {
      if (!form.checkValidity()) {
        event.preventDefault();
        event.stopPropagation();
      }
      form.classList.add('was-validated');
    }, false);
  });
  
  // パスコード認証フロー
  const passcodeRequestForm = document.getElementById('passcode-request-form');
  const passcodeStep1 = document.getElementById('passcode-step1');
  const passcodeStep2 = document.getElementById('passcode-step2');
  const passcodeInput = document.querySelector('input[name="temp_password"]');
  
  if (passcodeRequestForm) {
    passcodeRequestForm.addEventListener('submit', function(e) {
      e.preventDefault();
      
      if (!passcodeRequestForm.checkValidity()) {
        passcodeRequestForm.classList.add('was-validated');
        return;
      }
      
      const emailInput = passcodeRequestForm.querySelector('input[type="email"]');
      const submitButton = document.getElementById('submit-passcode-request');
      const originalText = submitButton.value;
      
      // ローディング状態
      submitButton.value = '送信中...';
      submitButton.disabled = true;
      
      const formData = new FormData(passcodeRequestForm);
      
      fetch(passcodeRequestForm.action, {
        method: 'POST',
        body: formData,
        headers: {
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content,
          'X-Requested-With': 'XMLHttpRequest'
        }
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          // Step 2に遷移
          passcodeStep1.classList.add('d-none');
          passcodeStep2.classList.remove('d-none');
          passcodeStep2.classList.add('animate-slide-up');
          
          // メールアドレス設定
          document.getElementById('verify-email').value = emailInput.value;
          document.getElementById('passcode-sent-message').innerHTML = 
            `<i class="bi bi-check-circle text-success"></i> ${data.masked_email || emailInput.value} に送信しました`;
          
          // パスコード入力にフォーカス
          if (passcodeInput) {
            passcodeInput.focus();
          }
        } else {
          // エラー表示
          alert(data.error || 'エラーが発生しました');
          submitButton.value = originalText;
          submitButton.disabled = false;
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('通信エラーが発生しました');
        submitButton.value = originalText;
        submitButton.disabled = false;
      });
    });
  }
  
  // パスコード入力の自動フォーマット
  if (passcodeInput) {
    passcodeInput.addEventListener('input', function(e) {
      // 数字以外を削除
      this.value = this.value.replace(/[^0-9]/g, '');
    });
    
    // ペースト時の処理
    passcodeInput.addEventListener('paste', function(e) {
      e.preventDefault();
      const pastedText = (e.clipboardData || window.clipboardData).getData('text');
      const numbers = pastedText.replace(/[^0-9]/g, '').slice(0, 6);
      this.value = numbers;
    });
  }
  
  // 再送信ボタン
  const resendButton = document.getElementById('resend-passcode');
  if (resendButton) {
    resendButton.addEventListener('click', function(e) {
      e.preventDefault();
      
      if (confirm('パスコードを再送信しますか？')) {
        // Step 1に戻る
        passcodeStep2.classList.add('d-none');
        passcodeStep1.classList.remove('d-none');
        passcodeStep1.classList.add('animate-slide-up');
        
        // メールアドレスを保持
        const email = document.getElementById('verify-email').value;
        const emailInput = document.querySelector('#passcode-step1 input[type="email"]');
        if (emailInput && email) {
          emailInput.value = email;
        }
      }
    });
  }
  
  // Bootstrap tabs初期化確認
  const triggerTabList = document.querySelectorAll('#loginTabs button');
  triggerTabList.forEach(triggerEl => {
    triggerEl.addEventListener('shown.bs.tab', event => {
      console.log('Tab activated:', event.target.getAttribute('data-bs-target'));
      // タブ切り替え時にフォーカス移動
      const targetPane = document.querySelector(event.target.getAttribute('data-bs-target'));
      if (targetPane) {
        const firstInput = targetPane.querySelector('input:not([type="hidden"])');
        if (firstInput) {
          setTimeout(() => firstInput.focus(), 100);
        }
      }
    });
  });
  
  console.log('Bootstrap tabs initialized:', triggerTabList.length);
});

// CLAUDE.md準拠: Bootstrapが読み込まれていない場合の警告
if (typeof bootstrap === 'undefined') {
  console.error('Bootstrap is not loaded. Tabs will not function properly.');
}
</script>

<%# ============================================ %>
<%# TODO: Phase 5-6 の実装項目 %>
<%# ============================================ %>
<%# 
  TODO: 🟡 Phase 5（重要）- パスワード強度インジケーター
  優先度: 中（セキュリティ向上）
  実装内容:
    - リアルタイムパスワード強度チェック
    - Bootstrap Progress Barでの視覚的表示
    - パスワード要件のガイダンス
  期待効果: セキュアなパスワード設定の促進
  
  TODO: 🟢 Phase 6（推奨）- 生体認証対応
  優先度: 低（先進的機能）
  実装内容:
    - WebAuthn API実装
    - Touch ID/Face ID対応
  期待効果: パスワードレス認証の実現
%>