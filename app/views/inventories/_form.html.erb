<%# Bootstrap 5 モダン在庫フォーム - StockRx 公開インターフェース %>
<%= form_with(model: inventory, class: "needs-validation", novalidate: true, data: { turbo: false }) do |form| %>
  
  <%# エラーメッセージ表示 %>
  <% if inventory.errors.any? %>
    <div class="alert alert-danger mb-4" role="alert">
      <div class="d-flex align-items-start">
        <i class="fas fa-exclamation-triangle me-2 mt-1"></i>
        <div>
          <h6 class="alert-heading mb-2">
            <%= pluralize(inventory.errors.count, "つのエラー") %> が発生しました
          </h6>
          <ul class="mb-0">
            <% inventory.errors.each do |error| %>
              <li><%= error.full_message %></li>
            <% end %>
          </ul>
        </div>
      </div>
    </div>
  <% end %>

  <%# 商品名フィールド %>
  <div class="mb-4">
    <%= form.label :name, "商品名", class: "form-label fw-medium" %>
    <div class="input-group">
      <span class="input-group-text bg-light">
        <i class="fas fa-box text-muted"></i>
      </span>
      <%= form.text_field :name, 
          class: "form-control form-control-lg", 
          placeholder: "商品名を入力",
          required: true %>
      <div class="invalid-feedback">
        商品名を入力してください。
      </div>
    </div>
  </div>

  <%# 在庫数フィールド %>
  <div class="mb-4">
    <%= form.label :quantity, "在庫数", class: "form-label fw-medium" %>
    <div class="input-group">
      <span class="input-group-text bg-light">
        <i class="fas fa-cubes text-muted"></i>
      </span>
      <%= form.number_field :quantity, 
          min: 0, 
          class: "form-control form-control-lg", 
          placeholder: "0",
          required: true %>
      <span class="input-group-text">個</span>
      <div class="invalid-feedback">
        在庫数を正しく入力してください。
      </div>
    </div>
  </div>

  <%# 単価フィールド %>
  <div class="mb-4">
    <%= form.label :price, "単価", class: "form-label fw-medium" %>
    <div class="input-group">
      <span class="input-group-text bg-light">¥</span>
      <%= form.number_field :price, 
          min: 0, 
          step: 0.01, 
          class: "form-control form-control-lg", 
          placeholder: "0.00",
          required: true %>
      <div class="invalid-feedback">
        単価を正しく入力してください。
      </div>
    </div>
  </div>

  <%# ステータスフィールド %>
  <div class="mb-4">
    <%= form.label :status, "ステータス", class: "form-label fw-medium" %>
    <div class="input-group">
      <span class="input-group-text bg-light">
        <i class="fas fa-info-circle text-muted"></i>
      </span>
      <%= form.select :status, 
          options_for_select(Inventory::STATUSES.map { |k, _| [k.humanize, k] }, inventory.status), 
          { include_blank: "ステータスを選択" }, 
          { class: "form-select form-select-lg", required: true } %>
      <div class="invalid-feedback">
        ステータスを選択してください。
      </div>
    </div>
  </div>

  <%# フォームアクションボタン %>
  <div class="d-flex flex-column flex-sm-row justify-content-end gap-3 pt-4 border-top">
    <% if inventory.persisted? %>
      <%= link_to inventory_path(inventory), class: "btn btn-outline-secondary btn-lg" do %>
        <i class="fas fa-times me-2"></i>キャンセル
      <% end %>
    <% else %>
      <%= link_to inventories_path, class: "btn btn-outline-secondary btn-lg" do %>
        <i class="fas fa-times me-2"></i>キャンセル
      <% end %>
    <% end %>
    <%= form.submit (inventory.persisted? ? "更新する" : "登録する"), 
        class: "btn btn-primary btn-lg",
        data: { 
          disable_with: '<i class="fas fa-spinner fa-spin me-2"></i>処理中...' 
        } do %>
      <i class="fas fa-<%= inventory.persisted? ? 'edit' : 'plus' %> me-2"></i>
      <%= inventory.persisted? ? '更新する' : '登録する' %>
    <% end %>
  </div>
<% end %>

<%# Bootstrap 5 Form Validation JavaScript %>
<script>
(function() {
  'use strict';
  
  // フォームバリデーション
  window.addEventListener('load', function() {
    var forms = document.getElementsByClassName('needs-validation');
    var validation = Array.prototype.filter.call(forms, function(form) {
      form.addEventListener('submit', function(event) {
        if (form.checkValidity() === false) {
          event.preventDefault();
          event.stopPropagation();
        }
        form.classList.add('was-validated');
      }, false);
    });
  }, false);

  // リアルタイムバリデーション
  document.addEventListener('DOMContentLoaded', function() {
    const inputs = document.querySelectorAll('.form-control, .form-select');
    inputs.forEach(input => {
      input.addEventListener('input', function() {
        if (this.checkValidity()) {
          this.classList.remove('is-invalid');
          this.classList.add('is-valid');
        } else {
          this.classList.remove('is-valid');
          this.classList.add('is-invalid');
        }
      });
    });
  });
})();
</script>

<%# TODO: 🟡 Phase 2 - フォーム機能強化 %>
<%# 優先度: 中（ユーザビリティ向上） %>
<%# 実装内容: 画像アップロード、カテゴリ選択、バーコード生成 %>
<%# 理由: 商品管理機能の充実 %>
<%# 期待効果: 商品登録の効率化、視認性向上 %>
<%# 工数見積: 2日 %>
<%# 依存関係: 画像処理gem、バーコードライブラリ %> 