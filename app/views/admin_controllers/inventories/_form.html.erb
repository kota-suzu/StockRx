<%# 在庫フォーム - Bootstrap 5版 %>
<%= form_with(model: [:admin, inventory], class: "needs-validation", novalidate: true) do |form| %>
  <%# エラーメッセージ表示 %>
  <% if inventory.errors.any? %>
    <div class="alert alert-danger" role="alert">
      <div class="d-flex align-items-start">
        <div class="flex-shrink-0">
          <i class="fas fa-exclamation-triangle fa-lg me-3"></i>
        </div>
        <div>
          <h4 class="alert-heading h6 mb-2">
            入力内容にエラーがあります（<%= inventory.errors.count %>件）
          </h4>
          <ul class="mb-0 small">
            <% inventory.errors.full_messages.each do |message| %>
              <li><%= message %></li>
            <% end %>
          </ul>
        </div>
      </div>
    </div>
  <% end %>

  <%# フォーム入力フィールド %>
  <div class="row g-3">
    <%# 商品名 %>
    <div class="col-12">
      <%= form.label :name, "商品名", class: "form-label" %>
      <div class="input-group">
        <span class="input-group-text">
          <i class="fas fa-tag"></i>
        </span>
        <%= form.text_field :name, 
                           class: "form-control #{'is-invalid' if inventory.errors[:name].any?}",
                           placeholder: "商品名を入力してください",
                           required: true,
                           "aria-describedby": "nameHelp" %>
        <% if inventory.errors[:name].any? %>
          <div class="invalid-feedback">
            <%= inventory.errors[:name].first %>
          </div>
        <% end %>
      </div>
      <div id="nameHelp" class="form-text">
        商品を識別するための名前を入力してください（必須）
      </div>
    </div>

    <%# ステータス %>
    <div class="col-md-6">
      <%= form.label :status, "ステータス", class: "form-label" %>
      <%= form.select :status, 
                     Inventory::STATUSES.map { |k, _| [t("inventories.status.#{k}"), k] }, 
                     { selected: inventory.status || "active" },
                     class: "form-select #{'is-invalid' if inventory.errors[:status].any?}",
                     "aria-describedby": "statusHelp" %>
      <% if inventory.errors[:status].any? %>
        <div class="invalid-feedback">
          <%= inventory.errors[:status].first %>
        </div>
      <% end %>
      <div id="statusHelp" class="form-text">
        商品の現在の状態を選択してください
      </div>
    </div>

    <%# 価格 %>
    <div class="col-md-6">
      <%= form.label :price, "価格", class: "form-label" %>
      <div class="input-group">
        <span class="input-group-text">
          <i class="fas fa-yen-sign"></i>
        </span>
        <%= form.number_field :price, 
                             step: 1, 
                             min: 0,
                             class: "form-control #{'is-invalid' if inventory.errors[:price].any?}",
                             placeholder: "0",
                             required: true,
                             "aria-describedby": "priceHelp" %>
        <span class="input-group-text">円</span>
        <% if inventory.errors[:price].any? %>
          <div class="invalid-feedback">
            <%= inventory.errors[:price].first %>
          </div>
        <% end %>
      </div>
      <div id="priceHelp" class="form-text">
        商品の販売価格を入力してください（0円以上）
      </div>
    </div>

    <%# 数量 %>
    <div class="col-md-6">
      <%= form.label :quantity, "数量", class: "form-label" %>
      <div class="input-group">
        <span class="input-group-text">
          <i class="fas fa-boxes"></i>
        </span>
        <%= form.number_field :quantity, 
                             step: 1, 
                             min: 0,
                             class: "form-control #{'is-invalid' if inventory.errors[:quantity].any?}",
                             placeholder: "0",
                             required: true,
                             "aria-describedby": "quantityHelp" %>
        <span class="input-group-text">個</span>
        <% if inventory.errors[:quantity].any? %>
          <div class="invalid-feedback">
            <%= inventory.errors[:quantity].first %>
          </div>
        <% end %>
      </div>
      <div id="quantityHelp" class="form-text">
        現在の在庫数を入力してください（0個以上）
      </div>
    </div>

    <%# 入力ガイド %>
    <div class="col-12">
      <div class="alert alert-info">
        <h6 class="alert-heading">
          <i class="fas fa-lightbulb me-2"></i>入力のヒント
        </h6>
        <ul class="mb-0 small">
          <li><strong>商品名</strong>: 他の商品と区別できる分かりやすい名前を付けてください</li>
          <li><strong>価格</strong>: 販売価格を円単位で入力してください（税込み価格推奨）</li>
          <li><strong>数量</strong>: 現在の正確な在庫数を入力してください</li>
          <li><strong>ステータス</strong>: 通常は「有効」を選択、販売停止の場合は「アーカイブ」を選択</li>
        </ul>
      </div>
    </div>
  </div>

  <%# アクションボタン %>
  <div class="row mt-4">
    <div class="col-12">
      <div class="d-flex justify-content-end gap-2">
        <%= link_to inventory.new_record? ? admin_inventories_path : admin_inventory_path(inventory), 
                   class: "btn btn-outline-secondary" do %>
          <i class="fas fa-times me-2"></i>キャンセル
        <% end %>
        <%= form.submit inventory.new_record? ? "登録する" : "更新する", 
                       class: "btn btn-success btn-lg",
                       id: "submitBtn" do %>
          <i class="fas fa-<%= inventory.new_record? ? 'plus' : 'save' %> me-2"></i><%= inventory.new_record? ? "登録する" : "更新する" %>
        <% end %>
      </div>
    </div>
  </div>
<% end %>

<%# フォーム機能強化JavaScript %>
<script>
document.addEventListener('DOMContentLoaded', function() {
  const form = document.querySelector('.needs-validation');
  const submitBtn = document.getElementById('submitBtn');
  
  // フォーム送信時のバリデーション
  form.addEventListener('submit', function(event) {
    if (!form.checkValidity()) {
      event.preventDefault();
      event.stopPropagation();
    } else {
      // 送信中のUI変更
      submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>処理中...';
      submitBtn.disabled = true;
    }
    
    form.classList.add('was-validated');
  });

  // リアルタイムバリデーション
  const inputs = form.querySelectorAll('input[required], select[required]');
  inputs.forEach(input => {
    input.addEventListener('blur', function() {
      if (this.checkValidity()) {
        this.classList.remove('is-invalid');
        this.classList.add('is-valid');
      } else {
        this.classList.remove('is-valid');
        this.classList.add('is-invalid');
      }
    });
  });

  // 価格フォーマット（3桁区切り表示）
  const priceInput = document.querySelector('input[name="inventory[price]"]');
  if (priceInput) {
    priceInput.addEventListener('input', function() {
      // 入力値を数値として取得
      const value = this.value.replace(/,/g, '');
      if (!isNaN(value) && value !== '') {
        // 3桁区切りでフォーマット（ただし、focusout時のみ）
      }
    });
  }
});
</script> 