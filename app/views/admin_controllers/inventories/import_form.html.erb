<%# CLAUDE.md準拠: CSVインポート画面実装 %>
<%# メタ認知: 大量データ処理の利便性とセキュリティリスクのバランス %>
<% content_for :page_title, "CSVインポート" %>

<div class="container-fluid py-4">
  <%# パンくずナビゲーション - アクセシビリティ対応 %>
  <nav aria-label="breadcrumb" class="mb-4">
    <ol class="breadcrumb">
      <li class="breadcrumb-item"><%= link_to "ダッシュボード", admin_root_path %></li>
      <li class="breadcrumb-item"><%= link_to "在庫管理", admin_inventories_path %></li>
      <li class="breadcrumb-item active" aria-current="page">CSVインポート</li>
    </ol>
  </nav>

  <div class="row justify-content-center">
    <div class="col-lg-10">
      <%# メインカード %>
      <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
          <div class="row align-items-center">
            <div class="col">
              <h4 class="mb-0">
                <i class="bi bi-file-earmark-spreadsheet me-2"></i>
                在庫データCSVインポート
              </h4>
              <small class="opacity-75">大量の在庫データを効率的に一括登録</small>
            </div>
            <div class="col-auto">
              <span class="badge bg-success">
                <i class="bi bi-shield-check me-1"></i>
                セキュア
              </span>
            </div>
          </div>
        </div>
        
        <div class="card-body">
          <%# セキュリティ情報パネル - CLAUDE.md準拠 %>
          <div class="alert alert-info border-start border-info border-4" role="alert">
            <div class="row">
              <div class="col-md-6">
                <h6 class="alert-heading">
                  <i class="bi bi-info-circle me-2"></i>
                  セキュリティ要件
                </h6>
                <ul class="mb-0 small">
                  <% @import_security_info[:security_measures].each do |measure| %>
                    <li><%= measure %></li>
                  <% end %>
                </ul>
              </div>
              <div class="col-md-6">
                <h6 class="alert-heading">
                  <i class="bi bi-check-circle me-2"></i>
                  必須項目
                </h6>
                <ul class="mb-0 small">
                  <% @import_security_info[:required_headers].each do |header| %>
                    <li><strong><%= header %></strong> - <%= header_description(header) %></li>
                  <% end %>
                </ul>
              </div>
            </div>
          </div>

          <%# CSVインポートフォーム - CLAUDE.md準拠実装 %>
          <%= form_with url: import_admin_inventories_path, 
                        multipart: true,
                        local: true,
                        html: { 
                          id: "csv-import-form",
                          class: "needs-validation",
                          novalidate: true,
                          data: { 
                            turbo: false
                          }
                        } do |form| %>
            
            <%# ファイル選択セクション %>
            <div class="mb-4">
              <h5 class="mb-3">
                <i class="bi bi-upload me-2"></i>
                CSVファイル選択
              </h5>
              
              <div class="card">
                <div class="card-body text-center">
                  <div class="upload-area border-2 border-dashed border-primary rounded p-4 position-relative"
                       style="min-height: 200px;">
                    
                    <%# ドラッグ&ドロップエリア %>
                    <div class="d-flex flex-column justify-content-center align-items-center h-100">
                      <i class="bi bi-cloud-upload text-primary mb-3" style="font-size: 3rem;"></i>
                      <h6 class="text-primary mb-2">ファイルを選択またはドラッグ&ドロップ</h6>
                      <p class="text-muted small mb-3">
                        最大サイズ: <%= @import_security_info[:max_file_size] %><br>
                        対応形式: <%= @import_security_info[:allowed_formats].join(", ") %>
                      </p>
                      
                      <%# ファイル入力フィールド %>
                      <%= form.file_field :csv_file, 
                                         class: "form-control form-control-lg",
                                         accept: ".csv",
                                         required: true,
                                         aria: { 
                                           describedby: "file-help" 
                                         } %>
                      
                      <div class="invalid-feedback">
                        CSVファイルを選択してください。
                      </div>
                    </div>
                  </div>
                  
                  <div id="file-help" class="form-text mt-2">
                    <i class="bi bi-info-circle me-1"></i>
                    UTF-8エンコーディングのCSVファイルをアップロードしてください。
                  </div>
                </div>
              </div>
            </div>

            <%# インポートオプションセクション %>
            <div class="mb-4">
              <h5 class="mb-3">
                <i class="bi bi-gear me-2"></i>
                インポート設定
              </h5>
              
              <div class="card">
                <div class="card-body">
                  <div class="row">
                    <div class="col-md-6">
                      <div class="form-check mb-3">
                        <%= form.check_box :update_existing, 
                                          class: "form-check-input",
                                          id: "update_existing" %>
                        <%= form.label :update_existing, 
                                      class: "form-check-label" do %>
                          <strong>既存データを更新</strong>
                          <br><small class="text-muted">同じ商品名のデータが存在する場合、上書き更新します</small>
                        <% end %>
                      </div>
                      
                      <div class="form-check mb-3">
                        <%= form.check_box :skip_invalid, 
                                          class: "form-check-input",
                                          id: "skip_invalid" %>
                        <%= form.label :skip_invalid, 
                                      class: "form-check-label" do %>
                          <strong>エラー行をスキップ</strong>
                          <br><small class="text-muted">バリデーションエラーの行を除外して処理を続行</small>
                        <% end %>
                      </div>
                    </div>
                    
                    <div class="col-md-6">
                      <div class="mb-3">
                        <%= form.label :unique_key, "識別キー", class: "form-label" %>
                        <%= form.select :unique_key, 
                                       options_for_select([
                                         ["商品名", "name"],
                                         ["バーコード", "barcode"],
                                         ["商品コード", "code"]
                                       ], "name"),
                                       {},
                                       { 
                                         class: "form-select",
                                         aria: { describedby: "unique-key-help" }
                                       } %>
                        <div id="unique-key-help" class="form-text">
                          既存データとの照合に使用するキーを選択
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <%# CSVフォーマット案内セクション %>
            <div class="mb-4">
              <h5 class="mb-3">
                <i class="bi bi-table me-2"></i>
                CSVフォーマット
              </h5>
              
              <div class="card">
                <div class="card-body">
                  <div class="row">
                    <div class="col-md-6">
                      <h6 class="text-primary mb-3">必須カラム</h6>
                      <% @import_security_info[:required_headers].each do |header| %>
                        <div class="d-flex justify-content-between mb-2">
                          <code class="text-primary"><%= header %></code>
                          <small class="text-muted"><%= header_description(header) %></small>
                        </div>
                      <% end %>
                    </div>
                    
                    <div class="col-md-6">
                      <h6 class="text-success mb-3">サンプルデータ</h6>
                      <div class="table-responsive">
                        <table class="table table-sm table-bordered">
                          <thead class="table-light">
                            <tr>
                              <% @csv_template_headers.each do |header| %>
                                <th class="text-center small"><%= header %></th>
                              <% end %>
                            </tr>
                          </thead>
                          <tbody>
                            <% @csv_sample_data.each do |row| %>
                              <tr>
                                <% row.each do |cell| %>
                                  <td class="text-center small"><%= cell %></td>
                                <% end %>
                              </tr>
                            <% end %>
                          </tbody>
                        </table>
                      </div>
                    </div>
                  </div>
                  
                  <%# アクションボタン %>
                  <div class="row mt-3">
                    <div class="col-12">
                      <div class="d-flex gap-2 flex-wrap">
                        <button type="button" 
                                class="btn btn-sm btn-outline-primary"
                                onclick="downloadCsvTemplate()">
                          <i class="bi bi-download me-1"></i>
                          テンプレートダウンロード
                        </button>
                        
                        <button type="button" 
                                class="btn btn-sm btn-outline-info"
                                data-bs-toggle="modal" 
                                data-bs-target="#formatGuideModal">
                          <i class="bi bi-question-circle me-1"></i>
                          フォーマットガイド
                        </button>
                        
                        <% if @current_import_jobs.any? %>
                          <span class="badge bg-warning fs-6">
                            <i class="bi bi-exclamation-triangle me-1"></i>
                            インポート処理中
                          </span>
                        <% end %>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <%# アクションボタン %>
            <div class="d-flex gap-2 justify-content-between align-items-center">
              <%= link_to admin_inventories_path, 
                         class: "btn btn-outline-secondary" do %>
                <i class="bi bi-arrow-left me-1"></i>
                戻る
              <% end %>
              
              <div class="d-flex gap-2">
                <button type="button" 
                        class="btn btn-outline-primary"
                        onclick="validateBeforeSubmit()"
                        id="preview-button">
                  <i class="bi bi-eye me-1"></i>
                  プレビュー
                </button>
                
                <%= form.submit "インポート開始", 
                               class: "btn btn-primary btn-lg",
                               id: "submit-button",
                               data: { 
                                 confirm: "CSVファイルをインポートしますか？この操作は取り消せません。"
                               } %>
              </div>
            </div>
          <% end %>

          <%# 進捗表示エリア（非表示状態） %>
          <div id="import-progress" class="mt-4 d-none">
            <div class="card border-info">
              <div class="card-header bg-info text-white">
                <h6 class="mb-0">
                  <i class="bi bi-gear-wide-connected me-2"></i>
                  インポート進捗
                </h6>
              </div>
              <div class="card-body">
                <div class="progress mb-3" style="height: 20px;">
                  <div class="progress-bar progress-bar-striped progress-bar-animated bg-info" 
                       role="progressbar" 
                       style="width: 0%"
                       aria-valuenow="0" 
                       aria-valuemin="0" 
                       aria-valuemax="100"
                       id="progress-bar">
                    <span id="progress-text">0%</span>
                  </div>
                </div>
                
                <div class="row text-center">
                  <div class="col-md-3">
                    <div class="text-success">
                      <i class="bi bi-check-circle fs-4"></i>
                      <div class="fw-bold" id="success-count">0</div>
                      <small class="text-muted">成功</small>
                    </div>
                  </div>
                  <div class="col-md-3">
                    <div class="text-danger">
                      <i class="bi bi-x-circle fs-4"></i>
                      <div class="fw-bold" id="error-count">0</div>
                      <small class="text-muted">エラー</small>
                    </div>
                  </div>
                  <div class="col-md-3">
                    <div class="text-info">
                      <i class="bi bi-clock fs-4"></i>
                      <div class="fw-bold" id="processed-count">0</div>
                      <small class="text-muted">処理済み</small>
                    </div>
                  </div>
                  <div class="col-md-3">
                    <div class="text-muted">
                      <i class="bi bi-layers fs-4"></i>
                      <div class="fw-bold" id="total-count">0</div>
                      <small class="text-muted">合計</small>
                    </div>
                  </div>
                </div>
                
                <div class="mt-3">
                  <strong>ステータス:</strong> 
                  <span id="import-status" class="badge bg-info">準備中</span>
                </div>
                
                <div id="import-messages" class="mt-3">
                  <!-- 処理メッセージがここに表示される -->
                </div>
              </div>
            </div>
          </div>

        </div>
      </div>

      <%# プレビューカード（非表示状態） %>
      <div class="card shadow-sm mt-4 d-none" id="preview-card">
        <div class="card-header bg-light">
          <h6 class="mb-0">
            <i class="bi bi-eye me-2"></i>
            データプレビュー
          </h6>
        </div>
        <div class="card-body">
          <div class="table-responsive">
            <table class="table table-sm table-striped">
              <thead class="table-dark">
                <tr id="preview-headers">
                  <!-- ヘッダーがここに表示される -->
                </tr>
              </thead>
              <tbody id="preview-tbody">
                <!-- プレビューデータがここに表示される -->
              </tbody>
            </table>
          </div>
          <div class="mt-3 text-muted">
            <small>最初の5行のみ表示。実際のインポートでは全ての行が処理されます。</small>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<%# フォーマットガイドモーダル %>
<div class="modal fade" id="formatGuideModal" tabindex="-1" aria-labelledby="formatGuideModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="formatGuideModalLabel">
          <i class="bi bi-book me-2"></i>
          CSVフォーマットガイド
        </h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="row">
          <div class="col-md-6">
            <h6 class="text-primary">基本要件</h6>
            <ul class="list-unstyled">
              <li><i class="bi bi-check-circle text-success me-2"></i>UTF-8エンコーディング</li>
              <li><i class="bi bi-check-circle text-success me-2"></i>カンマ区切り（CSV形式）</li>
              <li><i class="bi bi-check-circle text-success me-2"></i>1行目にヘッダー必須</li>
              <li><i class="bi bi-check-circle text-success me-2"></i>ファイルサイズ10MB以下</li>
            </ul>
            
            <h6 class="text-warning mt-4">注意事項</h6>
            <ul class="list-unstyled">
              <li><i class="bi bi-exclamation-triangle text-warning me-2"></i>商品名に特殊文字を含む場合はダブルクォートで囲む</li>
              <li><i class="bi bi-exclamation-triangle text-warning me-2"></i>価格は数値のみ（通貨記号不可）</li>
              <li><i class="bi bi-exclamation-triangle text-warning me-2"></i>在庫数量は正の整数のみ</li>
            </ul>
          </div>
          
          <div class="col-md-6">
            <h6 class="text-info">例：正しいフォーマット</h6>
            <pre class="bg-light p-3 rounded"><code>name,quantity,price,status
"ノートパソコン",15,128000,active
"マウス",50,7800,active
"モニター",25,45000,active</code></pre>
            
            <h6 class="text-danger mt-3">例：間違ったフォーマット</h6>
            <pre class="bg-light p-3 rounded"><code>商品名;数量;価格  ←セミコロン区切りは不可
ノートパソコン,15個,¥128,000  ←単位や通貨記号は不可
マウス,-5,7800  ←負の数は不可</code></pre>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">閉じる</button>
      </div>
    </div>
  </div>
</div>

<%# JavaScript実装 - CLAUDE.md準拠 %>
<script>
document.addEventListener('DOMContentLoaded', function() {
  // ============================================
  // CSVインポート機能のJavaScript実装
  // CLAUDE.md準拠: セキュリティファースト、アクセシビリティ対応
  // ============================================
  
  const form = document.getElementById('csv-import-form');
  const fileInput = document.querySelector('input[type="file"]');
  const previewButton = document.getElementById('preview-button');
  const submitButton = document.getElementById('submit-button');
  const previewCard = document.getElementById('preview-card');
  const progressArea = document.getElementById('import-progress');
  
  // ファイル選択時の処理
  fileInput.addEventListener('change', function(e) {
    const file = e.target.files[0];
    if (file) {
      validateFile(file);
      previewButton.disabled = false;
    } else {
      previewButton.disabled = true;
      hidePreview();
    }
  });
  
  // ファイルバリデーション
  function validateFile(file) {
    const maxSize = 10 * 1024 * 1024; // 10MB
    const allowedTypes = ['text/csv', 'application/csv'];
    
    // サイズチェック
    if (file.size > maxSize) {
      showAlert('ファイルサイズが大きすぎます。10MB以下のファイルを選択してください。', 'danger');
      fileInput.value = '';
      return false;
    }
    
    // 拡張子チェック
    if (!file.name.toLowerCase().endsWith('.csv')) {
      showAlert('CSVファイルを選択してください。', 'danger');
      fileInput.value = '';
      return false;
    }
    
    return true;
  }
  
  // プレビュー機能
  window.validateBeforeSubmit = function() {
    const file = fileInput.files[0];
    if (!file) {
      showAlert('CSVファイルを選択してください。', 'warning');
      return;
    }
    
    const reader = new FileReader();
    reader.onload = function(e) {
      try {
        const csv = e.target.result;
        const lines = csv.split('\n').filter(line => line.trim());
        
        if (lines.length < 2) {
          showAlert('CSVファイルにデータが含まれていません。', 'warning');
          return;
        }
        
        displayPreview(lines.slice(0, 6)); // ヘッダー + 5行
        showAlert('プレビューを確認し、問題なければ「インポート開始」をクリックしてください。', 'info');
        
      } catch (error) {
        showAlert('CSVファイルの読み込みに失敗しました: ' + error.message, 'danger');
      }
    };
    
    reader.readAsText(file, 'UTF-8');
  };
  
  // プレビュー表示
  function displayPreview(lines) {
    const headers = lines[0].split(',').map(h => h.trim().replace(/"/g, ''));
    const data = lines.slice(1);
    
    const headersHtml = headers.map(h => `<th class="text-center">${escapeHtml(h)}</th>`).join('');
    document.getElementById('preview-headers').innerHTML = headersHtml;
    
    const bodyHtml = data.map(line => {
      const cells = line.split(',').map(c => c.trim().replace(/"/g, ''));
      const cellsHtml = cells.map(c => `<td class="text-center">${escapeHtml(c)}</td>`).join('');
      return `<tr>${cellsHtml}</tr>`;
    }).join('');
    
    document.getElementById('preview-tbody').innerHTML = bodyHtml;
    previewCard.classList.remove('d-none');
  }
  
  // プレビュー非表示
  function hidePreview() {
    previewCard.classList.add('d-none');
  }
  
  // アラート表示
  function showAlert(message, type = 'info') {
    // 既存のアラートを削除
    const existingAlert = document.querySelector('.alert-dismissible');
    if (existingAlert && existingAlert.closest('.container-fluid') === document.querySelector('.container-fluid')) {
      existingAlert.remove();
    }
    
    const alertHtml = `
      <div class="alert alert-${type} alert-dismissible fade show" role="alert">
        <i class="bi bi-info-circle me-2"></i>
        ${escapeHtml(message)}
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
      </div>
    `;
    
    // フォームの前に挿入
    form.insertAdjacentHTML('beforebegin', alertHtml);
    
    // 5秒後に自動削除
    setTimeout(() => {
      const alert = document.querySelector('.alert-dismissible');
      if (alert) {
        alert.remove();
      }
    }, 5000);
  }
  
  // HTMLエスケープ
  function escapeHtml(text) {
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
  }
  
  // テンプレートダウンロード
  window.downloadCsvTemplate = function() {
    const csvContent = `name,quantity,price,status
"サンプル商品A",100,1500,active
"サンプル商品B",50,2000,active
"サンプル商品C",200,800,active`;
    
    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
    const link = document.createElement('a');
    const url = URL.createObjectURL(blob);
    
    link.setAttribute('href', url);
    link.setAttribute('download', 'inventory_template.csv');
    link.style.visibility = 'hidden';
    
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    
    showAlert('テンプレートファイルをダウンロードしました。', 'success');
  };
  
  // フォーム送信時の処理
  form.addEventListener('submit', function(e) {
    // 基本バリデーション
    if (!fileInput.files[0]) {
      e.preventDefault();
      showAlert('CSVファイルを選択してください。', 'warning');
      return false;
    }
    
    // 送信中の状態に変更
    submitButton.disabled = true;
    submitButton.innerHTML = '<i class="bi bi-gear-wide-connected me-2"></i>処理中...';
    
    // 進捗エリアを表示
    progressArea.classList.remove('d-none');
    
    // ActionCable統合による進捗表示
    setupActionCableConnection();
  });
  
  // ============================================
  // ActionCable統合機能
  // ============================================
  
  function setupActionCableConnection() {
    // ActionCableがロードされているかチェック
    if (typeof App === 'undefined' || !App.cable) {
      console.warn('ActionCable not available. Real-time updates disabled.');
      return;
    }

    // ImportProgressChannelに接続
    const subscription = App.cable.subscriptions.create("ImportProgressChannel", {
      connected() {
        console.log('📡 Import progress channel connected');
        showAlert('リアルタイム進捗表示を開始しました。', 'info');
      },

      disconnected() {
        console.log('📡 Import progress channel disconnected');
        showAlert('リアルタイム進捗表示が切断されました。', 'warning');
      },

      received(data) {
        console.log('📨 Progress update received:', data);
        handleProgressUpdate(data);
      },

      error(error) {
        console.error('❌ Import progress channel error:', error);
        showAlert('進捗表示でエラーが発生しました。', 'danger');
      }
    });

    // ページ離脱時にクリーンアップ
    window.addEventListener('beforeunload', () => {
      if (subscription) {
        subscription.unsubscribe();
      }
    });
  }

  function handleProgressUpdate(data) {
    const progressArea = document.getElementById('import-progress');
    const messagesArea = document.getElementById('import-messages');
    
    if (!progressArea || !messagesArea) {
      console.warn('Progress display elements not found');
      return;
    }

    switch (data.status) {
      case 'progress':
        updateProgressBar(data);
        updateProgressMessage(data);
        break;
      case 'completed':
        handleImportCompletion(data);
        break;
      case 'error':
        handleImportError(data);
        break;
      default:
        console.log('Unknown progress status:', data.status);
    }
  }

  function updateProgressBar(data) {
    let progressBar = document.querySelector('#import-progress .progress-bar');
    
    if (!progressBar) {
      // プログレスバーが存在しない場合は作成
      const progressHtml = `
        <div class="progress mb-3" style="height: 25px;">
          <div class="progress-bar progress-bar-striped progress-bar-animated bg-primary" 
               role="progressbar" style="width: 0%">
            <span class="progress-text">0%</span>
          </div>
        </div>
      `;
      document.getElementById('import-progress').innerHTML = progressHtml;
      progressBar = document.querySelector('.progress-bar');
    }

    const percentage = Math.min(Math.max(data.progress || 0, 0), 100);
    progressBar.style.width = `${percentage}%`;
    progressBar.setAttribute('aria-valuenow', percentage);
    
    const progressText = progressBar.querySelector('.progress-text');
    if (progressText) {
      progressText.textContent = `${percentage.toFixed(1)}%`;
    }

    // 処理済み/総数の表示
    if (data.processed && data.total) {
      const statusText = ` (${data.processed}/${data.total})`;
      if (progressText) {
        progressText.textContent += statusText;
      }
    }
  }

  function updateProgressMessage(data) {
    const message = data.message || data.current_item || 'CSVデータを処理中...';
    const timestamp = new Date().toLocaleTimeString();
    
    const messageHtml = `
      <div class="alert alert-info alert-dismissible fade show" role="alert">
        <i class="bi bi-info-circle me-2"></i>
        <strong>${timestamp}:</strong> ${escapeHtml(message)}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
      </div>
    `;
    
    document.getElementById('import-messages').innerHTML = messageHtml;
  }

  function handleImportCompletion(data) {
    const result = data.result || {};
    const successMessage = `
      インポートが完了しました！<br>
      <strong>処理件数:</strong> ${result.processed || 0}件<br>
      <strong>成功:</strong> ${result.successful || 0}件<br>
      <strong>失敗:</strong> ${result.failed || 0}件
    `;

    showAlert(successMessage, 'success');
    
    // プログレスバーを100%に設定
    updateProgressBar({ progress: 100 });
    
    // フォームを再有効化
    const submitButton = document.getElementById('submit-button');
    if (submitButton) {
      submitButton.disabled = false;
      submitButton.innerHTML = '<i class="bi bi-upload me-2"></i>インポート開始';
    }

    // エラーがある場合は詳細表示
    if (result.errors && result.errors.length > 0) {
      const errorList = result.errors.slice(0, 5).map(err => `• ${err}`).join('<br>');
      const errorMessage = `<strong>エラー詳細:</strong><br>${errorList}`;
      if (result.errors.length > 5) {
        errorMessage += `<br><em>...他 ${result.errors.length - 5} 件のエラー</em>`;
      }
      
      setTimeout(() => {
        showAlert(errorMessage, 'warning');
      }, 2000);
    }
  }

  function handleImportError(data) {
    const errorMessage = data.message || 'インポート中にエラーが発生しました。';
    const details = data.details || {};
    
    let fullMessage = `<strong>エラー:</strong> ${escapeHtml(errorMessage)}`;
    
    if (details.line_number) {
      fullMessage += `<br><strong>行番号:</strong> ${details.line_number}`;
    }
    
    if (details.error_type) {
      fullMessage += `<br><strong>エラータイプ:</strong> ${details.error_type}`;
    }

    showAlert(fullMessage, 'danger');
    
    // フォームを再有効化
    const submitButton = document.getElementById('submit-button');
    if (submitButton) {
      submitButton.disabled = false;
      submitButton.innerHTML = '<i class="bi bi-upload me-2"></i>インポート開始';
    }
  }

  // TODO: 🟡 Phase 6（推奨）- ドラッグ&ドロップ機能実装
  // 優先度: 中（UX改善）
  // 実装内容: ファイルドロップエリア、視覚的フィードバック
  // 効果: ユーザビリティ向上、モダンなUI体験
});
</script>