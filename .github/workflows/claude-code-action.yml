name: Claude Code Action

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, edited]
  pull_request:
    types: [opened, edited, synchronize]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  claude-code:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'issues' && contains(github.event.issue.body, '@claude')) ||
      (github.event_name == 'pull_request' && contains(github.event.pull_request.body, '@claude'))
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Claude CLI
        run: |
          pip install anthropic
          pip install claude-cli

      - name: Extract Claude command
        id: extract-command
        run: |
          if [[ "${{ github.event_name }}" == "issue_comment" ]]; then
            BODY="${{ github.event.comment.body }}"
          elif [[ "${{ github.event_name }}" == "pull_request_review_comment" ]]; then
            BODY="${{ github.event.comment.body }}"
          elif [[ "${{ github.event_name }}" == "issues" ]]; then
            BODY="${{ github.event.issue.body }}"
          else
            BODY="${{ github.event.pull_request.body }}"
          fi
          
          # Extract command after @claude
          COMMAND=$(echo "$BODY" | grep -oP '(?<=@claude\s).*' | head -1)
          echo "command=$COMMAND" >> $GITHUB_OUTPUT

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Run Claude Code
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          # Create a temporary file with the command
          echo "${{ steps.extract-command.outputs.command }}" > claude_command.txt
          
          # Run Claude with the command
          claude code --model claude-3-opus-20240229 < claude_command.txt > claude_output.txt 2>&1 || true
          
          # Check if there were any changes
          if [[ -n $(git status --porcelain) ]]; then
            # Create a new branch if we're not already on a PR branch
            if [[ "${{ github.event_name }}" == "issues" ]] || [[ "${{ github.event_name }}" == "issue_comment" && "${{ github.event.issue.pull_request }}" == "null" ]]; then
              BRANCH_NAME="claude-fix-${{ github.event.issue.number }}-$(date +%s)"
              git checkout -b "$BRANCH_NAME"
            fi
            
            # Commit changes
            git add -A
            git commit -m "ü§ñ Claude Code: ${{ steps.extract-command.outputs.command }}"
            
            # Push changes
            if [[ -n "${BRANCH_NAME}" ]]; then
              git push origin "$BRANCH_NAME"
            else
              git push origin HEAD
            fi
          fi

      - name: Post Claude response
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const output = fs.readFileSync('claude_output.txt', 'utf8');
            
            let body = '## ü§ñ Claude Code Response\n\n';
            body += '```\n' + output + '\n```\n';
            
            // Check if there were any code changes
            const { execSync } = require('child_process');
            const gitStatus = execSync('git status --porcelain', { encoding: 'utf8' });
            
            if (gitStatus.trim()) {
              body += '\n\n### üìù Changes Made\n';
              const gitDiff = execSync('git diff HEAD~1..HEAD --name-status', { encoding: 'utf8' });
              body += '```\n' + gitDiff + '```\n';
              
              // If we created a new branch, mention it
              const currentBranch = execSync('git branch --show-current', { encoding: 'utf8' }).trim();
              if (currentBranch.startsWith('claude-fix-')) {
                body += `\n\n‚úÖ Created new branch: \`${currentBranch}\``;
                body += '\n\nPlease review the changes and create a pull request if they look good.';
              }
            } else {
              body += '\n\n‚úÖ No code changes were needed.';
            }
            
            // Post comment based on event type
            if (context.eventName === 'issue_comment' || context.eventName === 'pull_request_review_comment') {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            } else if (context.eventName === 'issues') {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                body: body
              });
            } else if (context.eventName === 'pull_request') {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: body
              });
            }

      - name: Create Pull Request (if needed)
        if: github.event_name == 'issues' || (github.event_name == 'issue_comment' && github.event.issue.pull_request == null)
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: claude-fix-${{ github.event.issue.number }}-${{ github.run_number }}
          title: "ü§ñ Claude Code: Fix for issue #${{ github.event.issue.number }}"
          body: |
            ## ü§ñ Claude Code Automated Fix
            
            This PR was automatically generated by Claude Code in response to issue #${{ github.event.issue.number }}.
            
            ### Command
            ```
            ${{ steps.extract-command.outputs.command }}
            ```
            
            ### Changes
            Please review the changes carefully before merging.
            
            Closes #${{ github.event.issue.number }}
          assignees: ${{ github.actor }}
          reviewers: ${{ github.actor }}