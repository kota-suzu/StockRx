# MySQL. Versions 5.5.8 and up are supported.
#
# Install the MySQL driver
#   gem install mysql2
#
# Ensure the MySQL gem is defined in your Gemfile
#   gem "mysql2"
#
# And be sure to use new-style password hashing:
#   https://dev.mysql.com/doc/refman/5.7/en/password-hashing.html
#
default: &default
  adapter: mysql2
  encoding: utf8mb4
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  username: <%= ENV.fetch("DATABASE_USERNAME") { "root" } %>
  password: <%= ENV.fetch("DATABASE_PASSWORD") { "password" } %>
  host: <%= ENV.fetch("DATABASE_HOST") { "db" } %>
  # パブリックネットワークの場合はSSL接続を推奨
  # TODO: 本番環境ではSSL設定を有効化

development:
  <<: *default
  database: app_db
  # 開発環境でのデバッグを容易にするための設定
  variables:
    sql_mode: TRADITIONAL

# Warning: The database defined as "test" will be erased and
# re-generated from your development database when you run "rake".
# Do not set this db to the same as development or production.
test:
  <<: *default
  database: app_test

# As with config/credentials.yml, you never want to store sensitive information,
# like your database password, in your source code. If your source code is
# ever seen by anyone, they now have access to your database.
#
# Instead, provide the password or a full connection URL as an environment
# variable when you boot the app. For example:
#
#   DATABASE_URL="mysql2://myuser:mypass@localhost/somedatabase"
#
# If the connection URL is provided in the special DATABASE_URL environment
# variable, Rails will automatically merge its configuration values on top of
# the values provided in this file. Alternatively, you can specify a connection
# URL environment variable explicitly:
#
#   production:
#     url: <%= ENV["MY_APP_DATABASE_URL"] %>
#
# Read https://guides.rubyonrails.org/configuring.html#configuring-a-database
# for a full overview on how database connection configuration can be specified.
#
production:
  <<: *default
  database: app_production
  username: <%= ENV.fetch("PROD_DATABASE_USERNAME") { "root" } %>
  password: <%= ENV.fetch("PROD_DATABASE_PASSWORD") { ENV.fetch("DATABASE_PASSWORD") { "password" } } %>
  host: <%= ENV.fetch("PROD_DATABASE_HOST") { ENV.fetch("DATABASE_HOST") { "db" } } %>
  # TODO: 本番環境ではセキュリティ設定を追加
  # ssl_mode: REQUIRED
  # sslca: /path/to/ca-cert.pem
