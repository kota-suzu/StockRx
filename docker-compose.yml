# TODO: Compose v2以降はversion属性不要。将来的な警告回避のため削除。
# TODO: 環境変数は.envファイルに移動して管理する
# TODO: バックアップの保存期間設定と古いバックアップの自動削除機能の追加
# TODO: Redisのメモリ設定の最適化
# TODO: セキュリティ強化（パスワードの環境変数化、SSL/TLS設定など）
# TODO: ログローテーション設定の追加
# TODO: ヘルスチェックの間隔とタイムアウト値の最適化
# TODO: 本番環境向けのDockerfile最適化（マルチステージビルド導入）

services:
  web:
    build: 
      context: .
      args:
        RUBY_VERSION: 3.3.8
    command: ["./wait-for", "db:3306", "--timeout=30", "--debug", "--", "./bin/rails", "server", "-b", "0.0.0.0"]
    ports:
      - "3000:3000"
    volumes:
      - .:/rails
      - bundle_cache:/usr/local/bundle
    environment:
      - RAILS_MAX_THREADS=5
      - MYSQL_ROOT_PASSWORD=password
      - RAILS_ENV=development
      - DATABASE_HOST=db
      - DATABASE_USERNAME=root
      - DATABASE_PASSWORD=password
      - REDIS_URL=redis://redis:6379/0
      - CABLE_REDIS_URL=redis://redis:6379/1
      # Disable Bootsnap in development for easier debugging
      - DISABLE_BOOTSNAP=true
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app
    # TODO: 本番環境ではヘルスチェック追加

  db:
    image: mysql:8.4
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=app_db
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      # CI環境用MySQL設定ファイル（2025年6月9日追加）
      # 環境変数 CI_DATABASE_CONFIG=true でCI最適化設定を適用
      - type: bind
        source: ./config/mysql/${CI_DATABASE_CONFIG:-default}.cnf
        target: /etc/mysql/conf.d/ci-optimized.cnf
        bind:
          create_host_path: true
    # MySQL 8.4+ では default-authentication-plugin は非推奨のためコメントアウト
    # command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-ppassword"]
      interval: 10s
      timeout: 15s  # タイムアウトを10s → 15sに延長
      retries: 10
      start_period: 40s  # 開始期間を30s → 40sに延長（CI環境での安定性向上）
    ports:
      - "3306:3306"
    networks:
      - app

  redis:
    image: redis:7
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - app
    # TODO: 本番環境向けRedis設定ファイル追加

  sidekiq:
    build: 
      context: .
      args:
        RUBY_VERSION: 3.3.8
    command: ["./wait-for", "db:3306", "--timeout=30", "--debug", "--", "bundle", "exec", "sidekiq"]
    volumes:
      - .:/rails
      - bundle_cache:/usr/local/bundle
    environment:
      - RAILS_MAX_THREADS=5
      - MYSQL_ROOT_PASSWORD=password
      - RAILS_ENV=development
      - DATABASE_HOST=db
      - DATABASE_USERNAME=root
      - DATABASE_PASSWORD=password
      - REDIS_URL=redis://redis:6379/0
      - CABLE_REDIS_URL=redis://redis:6379/1
      # Disable Bootsnap in development for easier debugging
      - DISABLE_BOOTSNAP=true
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app
    # TODO: 本番環境ではヘルスチェック追加

  backup:
    image: mysql:8.4
    volumes:
      - ./backup:/backup
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=app_db
    command: >
      bash -c "
        while true; do
          sleep 86400;
          mysqldump -h db -u root -ppassword app_db > /backup/backup-$(date +%Y%m%d).sql;
        done
      "
    depends_on:
      - db
    networks:
      - app
    # TODO: バックアップローテーション機能の追加

volumes:
  mysql_data:
  redis_data:
  bundle_cache:

networks:
  app:
    driver: bridge